
// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

RWTexture2D<float4> Result;
float Randomness;
float4 Color;
int ParticleCount;

struct Particle
{
	float3 position;
	float4 color;
};

RWStructuredBuffer<Particle> ParticleBuffer;

// [numthreads(8,8,1)]
[numthreads(16,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID) 
{
	// TODO: insert actual code here!

	/*
		Some notes:
		id is our thread index (.x/.y for a 2D set of threads). Basically
		equivalent to a texture position if pushing a texture in
	*/

	// Result[id.xy] = Color; // float4(id.x & id.y, (id.x & 15)/15.0, (id.y & 15)/15.0, 0.0);

	ParticleBuffer[id.x].color = Color;
}

